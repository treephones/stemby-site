{"version":3,"sources":["stemby_bare_icon.png","components/navbar/Navbar.js","particleOptions.js","App.js","reportWebVitals.js","components/pages/Commands.js","components/pages/faq.js","components/pages/Support.js","index.js"],"names":["Navi","variant","expand","Container","Brand","href","alt","src","this","props","logo","width","height","className","Toggle","Collapse","id","Nav","Link","target","React","Component","particlesInit","main","particlesLoaded","container","options","background","color","fpsLimit","interactivity","events","onHover","enable","mode","resize","modes","bubble","distance","duration","opacity","size","push","quantity","repulse","particles","value","links","collisions","move","direction","outMode","random","speed","straight","number","density","value_area","shape","type","detectRetina","App","Button","rel","init","loaded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Commands","ckey","cmds","map","category","Object","keys","Accordion","cmd","Date","now","Math","Item","eventKey","Header","command","Body","usage","description","example","aliases","Faq","qData","q","qid","question","answer","Support","ReactDOM","render","StrictMode","exact","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.c4e52504.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/stemby_bare_icon.6c57e3db.png\";","import React from \"react\";\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\n\r\n\r\nclass Navi extends React.Component {\r\n    render() {\r\n        return (\r\n            <Navbar variant='dark' expand=\"lg\">\r\n                <Container>\r\n                    <Navbar.Brand href=\"/\">\r\n                        <img\r\n                            alt=\"\"\r\n                            src={this.props.logo}\r\n                            width=\"90\"\r\n                            height=\"90\"\r\n                            className=\"d-inline-block align-top\"\r\n                        />{' '}\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link href=\"/\">Home</Nav.Link>\r\n                        <Nav.Link href='/commands'>Commands</Nav.Link>\r\n                        <Nav.Link href=\"/faq\">FAQ</Nav.Link>\r\n                        <Nav.Link href=\"/support\">Support</Nav.Link>\r\n                    </Nav>\r\n                    <Nav>\r\n                        <Nav.Link href=\"https://discord.com/api/oauth2/authorize?client_id=840700895251005481&permissions=51264&scope=bot\" target='_blank'>Invite</Nav.Link>\r\n                    </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\nexport default Navi;","export const particlesInit = (main) => {\r\n};\r\n\r\nexport const particlesLoaded = (container) => {\r\n};\r\n\r\nexport const options = {\r\n    background: {\r\n      color: {\r\n      },\r\n    },\r\n    fpsLimit: 40,\r\n    interactivity: {\r\n      events: {\r\n        onHover: {\r\n          enable: true,\r\n          mode: \"repulse\",\r\n        },\r\n        resize: true,\r\n      },\r\n      modes: {\r\n        bubble: {\r\n          distance: 400,\r\n          duration: 2,\r\n          opacity: 0.1,\r\n          size: 40,\r\n        },\r\n        push: {\r\n          quantity: 4,\r\n        },\r\n        repulse: {\r\n          distance: 100,\r\n          duration: 0.6,\r\n        },\r\n      },\r\n    },\r\n    particles: {\r\n      color: {\r\n        value: \"#ffffff\",\r\n      },\r\n      links: {\r\n        color: \"#15bbb4\",\r\n        distance: 150,\r\n        enable: true,\r\n        opacity: 0.4,\r\n        width: 1,\r\n      },\r\n      collisions: {\r\n        enable: true,\r\n      },\r\n      move: {\r\n        direction: \"none\",\r\n        enable: true,\r\n        outMode: \"bounce\",\r\n        random: false,\r\n        speed: 0.5,\r\n        straight: false,\r\n      },\r\n      number: {\r\n        density: {\r\n          enable: true,\r\n          value_area: 900,\r\n        },\r\n        value: 40,\r\n      },\r\n      opacity: {\r\n        value: 0.1,\r\n      },\r\n      shape: {\r\n        type: \"square\",\r\n      },\r\n      size: {\r\n        random: true,\r\n        value: 2,\r\n      },\r\n    },\r\n    detectRetina: true,\r\n  }","//requirements\nimport './App.css';\nimport logo from './stemby_bare_icon.png'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './components/navbar/Navbar.css';\nimport Navi from './components/navbar/Navbar.js'\nimport { Button, Container } from 'react-bootstrap';\nimport Particles from 'react-tsparticles';\nimport { options, particlesInit, particlesLoaded } from './particleOptions.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navi logo={logo} />\n      <header className=\"App-header\">\n        <div>Welcome to <p id='tt'>Stemby</p></div><br/>\n        <p id='secondary'>The best discord homework bot.</p>\n        <Container>\n          <Button className='hp-btns' id='inv-btn' href='https://discord.com/api/oauth2/authorize?client_id=840700895251005481&permissions=51264&scope=bot' target='_blank' rel=\"noopener noreferrer\" variant=\"primary\" size='lg'>Invite To Server</Button>{' '}\n          <Button className='hp-btns' href='/commands' rel=\"noopener noreferrer\" variant=\"secondary\" size='lg'>Commands</Button>{' '}\n        </Container>\n      </header>\n      <Particles  init={particlesInit} loaded={particlesLoaded} options={options} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import '../../App.css';\r\nimport logo from '../../stemby_bare_icon.png'\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../navbar/Navbar.css';\r\nimport Navi from '../../components/navbar/Navbar.js'\r\nimport { Accordion, Button, Container } from 'react-bootstrap';\r\nimport Particles from 'react-tsparticles';\r\nimport { options, particlesInit, particlesLoaded } from '../../particleOptions.js';\r\nimport cmds from './commands.json';\r\n\r\nfunction Commands() {\r\n    var ckey = \"\";\r\n    return (\r\n        <div className=\"App\">\r\n            <Navi logo={logo} />\r\n            <header className=\"App-header\" id='cmds'>\r\n                <div>\r\n                    <h1 id='stemby'>Commands</h1>\r\n                    <p>Instructions and examples of all of <span id='stemby'>Stemby's</span> commands.</p>\r\n                </div>\r\n                <Container>\r\n                    {\r\n                        cmds.map(category => {\r\n                            return <Container key={Date.now()*Math.random()+Math.random()}>\r\n                                    <h1>\r\n                                        {Object.keys(category)[0]}\r\n                                    </h1>\r\n                                    <Accordion>\r\n                                    {\r\n                                        category[Object.keys(category)[0]].map(cmd => {\r\n                                            ckey = Date.now()*Math.random()+Math.random();\r\n                                            return <Accordion.Item key={ckey} eventKey={ckey}>\r\n                                                <Accordion.Header>{cmd.command}</Accordion.Header>\r\n                                                <Accordion.Body>\r\n                                                    Usage: {cmd.usage}\r\n                                                    <br/><br/>\r\n                                                    Description: {cmd.description}\r\n                                                    <br/><br/>\r\n                                                    Example: {cmd.example}\r\n                                                    <br/><br/>\r\n                                                    Aliases: {cmd.aliases}\r\n                                                </Accordion.Body>\r\n                                            </Accordion.Item>\r\n                                        })\r\n                                    }\r\n                                    </Accordion>\r\n                            </Container>\r\n                        })\r\n                    }\r\n                </Container>\r\n                <br/>\r\n                <p id='secondary'><span id='stemby'>Stemby. </span>The best discord homework bot.</p>\r\n                <Container>\r\n                    <Button className='hp-btns' id='inv-btn' href='invlink' rel=\"noopener noreferrer\" variant=\"primary\" size='lg'>Invite To Server</Button>{' '}\r\n                    <Button className='hp-btns' href='/commands' rel=\"noopener noreferrer\" variant=\"secondary\" size='lg'>Commands</Button>{' '}\r\n                </Container>\r\n            </header>\r\n            <Particles  init={particlesInit} loaded={particlesLoaded} options={options} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Commands;","//required\r\nimport '../../App.css';\r\nimport logo from '../../stemby_bare_icon.png'\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../navbar/Navbar.css';\r\nimport './pages.css';\r\nimport Navi from '../../components/navbar/Navbar.js'\r\nimport { Accordion, Button, Container } from 'react-bootstrap';\r\nimport Particles from 'react-tsparticles';\r\nimport { options, particlesInit, particlesLoaded } from '../../particleOptions.js';\r\n\r\n//data\r\nimport qData from './faqs.json';\r\n\r\nfunction Faq() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Navi logo={logo} />\r\n            <header className=\"App-header\">\r\n                <div>\r\n                    <h1 id='stemby'>FAQs</h1>\r\n                    <p>Frequently asked questions.</p>\r\n                </div>\r\n                <Container>\r\n                    <Accordion>\r\n                        {\r\n                            qData.map(q => {\r\n                                return (\r\n                                    <Accordion.Item eventKey={q.qid} key={q.qid}>\r\n                                        <Accordion.Header>{q.question}</Accordion.Header>\r\n                                        <Accordion.Body>{q.answer}</Accordion.Body>\r\n                                    </Accordion.Item>\r\n                                );\r\n                            })\r\n                        }\r\n                    </Accordion>\r\n                </Container>\r\n                <br/>\r\n                <p id='secondary'><span id='stemby'>Stemby. </span>The best discord homework bot.</p>\r\n                <Container>\r\n                    <Button className='hp-btns' id='inv-btn' href='invlink' rel=\"noopener noreferrer\" variant=\"primary\" size='lg'>Invite To Server</Button>{' '}\r\n                    <Button className='hp-btns' href='/commands' rel=\"noopener noreferrer\" variant=\"secondary\" size='lg'>Commands</Button>{' '}\r\n                </Container>\r\n            </header>\r\n            <Particles  init={particlesInit} loaded={particlesLoaded} options={options} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Faq;","import '../../App.css';\r\nimport logo from '../../stemby_bare_icon.png'\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../navbar/Navbar.css';\r\nimport Navi from '../../components/navbar/Navbar.js'\r\nimport { Button, Container } from 'react-bootstrap';\r\nimport Particles from 'react-tsparticles';\r\nimport { options, particlesInit, particlesLoaded } from '../../particleOptions.js';\r\n\r\nfunction Support() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Navi logo={logo} />\r\n            <header className=\"App-header\">\r\n                <div>\r\n                    <h1 id='stemby'>Support</h1>\r\n                    <p>For any concerns or extra clarification using the bot, please contact <code>Treephones#4601</code> or <code>crolaf#3494</code> on discord.</p>\r\n                </div><br/>\r\n                <p id='secondary'><span id='stemby'>Stemby. </span>The best discord homework bot.</p>\r\n                <Container>\r\n                    <Button className='hp-btns' id='inv-btn' href='invlink' rel=\"noopener noreferrer\" variant=\"primary\" size='lg'>Invite To Server</Button>{' '}\r\n                    <Button className='hp-btns' href='/commands' rel=\"noopener noreferrer\" variant=\"secondary\" size='lg'>Commands</Button>{' '}\r\n                </Container>\r\n            </header>\r\n            <Particles  init={particlesInit} loaded={particlesLoaded} options={options} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Support;","//required\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Route, Routes } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n//pages\nimport Commands from './components/pages/Commands.js';\nimport Faq from './components/pages/faq.js';\nimport Support from './components/pages/Support.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n          <Route exact path='/' element={<App />}/>\n          <Route exact path='/home' element={<App />}/>\n          <Route exact path='/commands' element={<Commands />}/>\n          <Route exact path='/faq' element={<Faq />}/>\n          <Route exact path='/support' element={<Support />}/>\n        </Routes>\n    </ BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}